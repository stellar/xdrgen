// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package MyXDR;

import java.io.IOException;

import static MyXDR.Constants.*;
import com.google.common.base.Objects;

// === xdr source ============================================================

//  typedef hyper           int2;

//  ===========================================================================
public class Int2 implements XdrElement {
  private Long int2;

  public Int2() {}

  public Int2(Long int2) {
    this.int2 = int2;
  }

  public Long getInt2() {
    return this.int2;
  }

  public void setInt2(Long value) {
    this.int2 = value;
  }

  public static void encode(XdrDataOutputStream stream, Int2  encodedInt2) throws IOException {
    stream.writeLong(encodedInt2.int2);
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }
  public static Int2 decode(XdrDataInputStream stream) throws IOException {
    Int2 decodedInt2 = new Int2();
    decodedInt2.int2 = stream.readLong();
    return decodedInt2;
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(this.int2);
  }

  @Override
  public boolean equals(Object object) {
    if (!(object instanceof Int2)) {
      return false;
    }

    Int2 other = (Int2) object;
    return Objects.equal(this.int2, other.int2);
  }
}
